package com.finanstar.data.controller;

import com.finanstar.data.service.DataServiceI;
import com.finanstar.eqcm.entity.MarketConvEqcmEntity;
import com.finanstar.eqcm.service.EqcmServiceI;
import com.finanstar.eqcm.service.Serializer;
import com.finanstar.marketindex.entity.MarketIndexEntity;
import com.finanstar.util.common.Util;

import net.sf.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.jeecgframework.core.common.controller.BaseController;
import org.jeecgframework.core.common.model.json.AjaxJson;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

/**
 * 
 * @描 述： 市场数据爬虫统一处理、EQCM RATE仍在eqcm.dataController。
 * @author:Daniel Pine
 * @联系方式:danielpine@sina.com
 * @date :2018年8月3日-下午2:05:21
 */
@Controller
@RequestMapping("/marketDataController")
public class MarketDataController extends BaseController {
  /**
   * Logger for this class
   */
  private static final Logger logger = Logger.getLogger(MarketDataController.class);
  @Autowired
  private DataServiceI dataService;



  /**
   * 跳转到指定市场的page
   * 
   * @param market
   * @param request
   * @param response
   * @return
   */
  @RequestMapping(params = "doVolDataCrawler")
  @ResponseBody
  public AjaxJson doVolDataCrawler(AjaxJson j, String info, HttpServletRequest request,
      HttpServletResponse response) {

    logger.info(info);
    // 拆分信息
    String[] infoArr = info.split(":");
    String type = infoArr[2];
    String cli = infoArr[3];
    switch (type) {
      case "fx":
        JSONObject voljson = dataService.doFxVolCrawler(cli);
        //System.out.println(voljson.toString());
        j.setMsg("ok");
        j.setObj(voljson);
        break;
      default:
        break;
    }
    return j;
  }
  /**
   * 
   *  @方法描述： 
   *  @作       者： Daniel Pine
   *  @日       期： 2018年8月6日-下午4:08:24
   *  @return
   */
  @RequestMapping(params = "doIndexDataCrawler")
  @ResponseBody
  public AjaxJson doIndexDataCrawler(AjaxJson j, String info, HttpServletRequest request,
      HttpServletResponse response) {
    
    logger.info(info);
    // 拆分信息
    String[] infoArr = info.split(":");
    String type = infoArr[2];
    String cli = infoArr[3];
    switch (type) {
      case "fx":
        JSONObject json = dataService.doFxIndexCrawler(cli);
        //System.out.println(voljson.toString());
        System.out.println(json);
        j.setMsg("ok");
        j.setObj(json);
        break;
      default:
        break;
    }
    return j;
  }
  /*
   * public ModelAndView doVolDataCrawler(String market, HttpServletRequest request,
   * HttpServletResponse response) { ModelAndView view = new
   * ModelAndView("com/finanstar/eqcm/data/indexAndVol"); // 找出所有市场惯例后 跳到页面
   * 
   * // 市场惯例集合 //List<MarketConvEqcmEntity> convList = eqcmServiceI.findAllConv();
   * 
   * //view.addObject("convList", convList);
   * 
   * return view; }
   */



  @RequestMapping(params = "doDataCrawlerSave", method = RequestMethod.POST)
  @ResponseBody
  public AjaxJson doDataCrawlerSave(AjaxJson j, String data, String type, String date,
      HttpServletRequest request, HttpServletResponse response) {

    JSONObject json = JSONObject.fromObject(data);
    
    dataService.saveCrawlerVol(date, type, json);
    
    j.setObj(json.keySet().toString());
    
    return j;
  }
  @RequestMapping(params = "doIndexDataCrawlerSave", method = RequestMethod.POST)
  @ResponseBody
  public AjaxJson doIndexDataCrawlerSave(AjaxJson j, String data, String type, String date,
      HttpServletRequest request, HttpServletResponse response) {
    
    JSONObject json = JSONObject.fromObject(data);
    
    int count = dataService.saveCrawlerIndex(date, type, json);
    
    j.setObj(count+"Lines of "+json.keySet().toString());
    
    return j;
  }


}
